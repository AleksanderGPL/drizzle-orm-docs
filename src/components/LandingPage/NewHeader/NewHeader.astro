---
import { Image } from "astro:assets";
import JavaScriptIcon from "../../Icons/JavaScriptIcon.astro";
import TypeScriptIcon from "../../Icons/TypeScriptIcon.astro";
import SecondPic from "../Header/Images/SecondPic.webp";
import SecondPicDark from "../Header/Images/SecondPic_dark.webp";
import TopPick from './Images/LiveOnTheEdge.webp';
import TopPickDark from './Images/LiveOnTheEdgeDark.webp';
import ConnectEveryWhere from '../Supporting/Images/ConnectEverywhere.webp';
import ConnectEveryWhereDark from '../Supporting/Images/ConnectEverywhereDark.webp';
---
<div class="header_container">
  <div class="header-left">
    <div class="title">ORM for you to settle</div>
    <div class="tags">
      <div class="tag">
        <div class="tag-icon-container">
          <div class="tag-icon js">
            <JavaScriptIcon/>
          </div>
        </div>
        <div class="tag-text">JavaScript</div>
      </div>
      <div class="tag">
        <div class="tag-icon-container">
          <div class="tag-icon ts" >
            <TypeScriptIcon/>
          </div>
        </div>
        <div class="tag-text">TypeScript</div>
      </div>
    </div>
    <div class="header-middle">
      <Image src={TopPick} alt="second pick" class="img_light" />
      <Image src={TopPickDark} alt="second pick" class="img_dark" />
      <Image style="align-self: start;" src={ConnectEveryWhere} alt="second pick" class="img_light" />
      <Image style="align-self: start;" src={ConnectEveryWhereDark} alt="second pick" class="img_dark" />
      <Image style="align-self: end" src={SecondPic} alt="second pick" class="img_light" />
      <Image style="align-self: end" src={SecondPicDark} alt="second pick" class="img_dark" />
    </div>
    <div class="buttons">
      <a href="/docs/overview#why-sql-like" class="header-button">
        <span>Why Drizzle?</span>
      </a>
      <a href="/docs/overview" class="header-button">
        <span>Read Docs</span>
      </a>
      <div class="header-button button--search">
        <div class="button-text"><span>Search Docs</span></div>
        <div id="docsearch"></div>
      </div>
      <button id="inkeepButton" class="header-button">
        <span>Ask Docs</span>
      </button>
    </div>
  </div>
  <div class="header-right">
    <div style="display: flex; flex-direction: column; justify-content: space-between; align-items: start">
      <Image src={TopPick} alt="second pick" class="img_light second_pick" />
      <Image src={TopPickDark} alt="second pick" class="img_dark second_pick" />
      <Image style="align-self: start;" src={ConnectEveryWhere} alt="second pick" class="img_light" />
      <Image style="align-self: start;" src={ConnectEveryWhereDark} alt="second pick" class="img_dark" />
    </div>
    <Image style="align-self: end" src={SecondPic} alt="second pick" class="img_light" />
    <Image style="align-self: end" src={SecondPicDark} alt="second pick" class="img_dark" />
  </div>
</div>
<script is:inline>
  docsearch({
    container: "#docsearch",
    appId: "MXZNUT59HV",
    apiKey: "7c390e262ac8858df0b6624d01d9dfef",
    indexName: "orm-drizzle",
    placeholder: "Search documentation...",
  });
</script>
<script type="module">

  const inkeepButton = document.getElementById("inkeepButton");

  // Create a new div element to hold the Inkeep modal and set its id and position
  const inkeepDiv = document.createElement("div");
  inkeepDiv.id = "inkeepModal";
  inkeepDiv.style.position = "absolute";
  document.body.appendChild(inkeepDiv);

  const handleClose = () => {
    inkeepWidget.render({
      ...config,
      isOpen: false,
    });
  };

  const handleOpen = () => {
    let themeName = localStorage.getItem("theme");
    if (themeName === "system") {
      themeName = window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }
    inkeepWidget.render({
      ...config,
      isOpen: true,
      baseSettings: {
        ...config.properties.baseSettings,
        theme: {
          colorMode: {
            forcedColorMode: themeName,
          },
        },
      },
    });
    
  };
  const config = {
    stylesheetUrls: ["/inkeep-styles.css"],
    componentType: "CustomTrigger", // required
    targetElement: inkeepDiv, // required
    properties: {
      isOpen: false, // required
      onClose: handleClose, // required
      onOpen: undefined,
      baseSettings: {
        apiKey: "4f4da4a5733032ef8ff23e3b7906954877fd0ee54d58d1e0",
        integrationId: "clpbm8p9y002ns601vbbswj5i",
        organizationId: "clog94xy50001s601yapu7swn",
        organizationDisplayName: "Drizzle ORM",
        primaryBrandColor: "#FFFFFF",
        theme: {
          colorMode: {
            forcedColorMode: "dark",
          },
        },
      },
      modalSettings: {
        defaultView: "AI_CHAT",
        areOpenHotKeysDisabled: true,
      },
      aiChatSettings: {
        botAvatarSrcUrl: "/svg/drizzle.svg",
      },
    },
  };

  // Embed the widget using the `Inkeep.embed()` function.
  const inkeepWidget = Inkeep().embed(config);

  // Add event listener to open the Inkeep modal when the button is clicked
  inkeepButton.addEventListener("click", handleOpen);
  window.inkeepWidget = inkeepWidget;
</script>
<style is:inline>
  .DocSearch-Button {
    opacity: 0;
    margin-left: 0;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    height: 100%;
  }
</style>
<style>
  .header_container {
    max-width: 910px;
    margin: 144px auto 0;
    width: 100%;
    display: flex;
      gap: 20px;
  }

  .header-left {
    display: flex;
    flex-direction: column;
  }

  .header-right {
    display: flex;
    justify-content: space-between;
    width: 70%;
  }

  .header-middle {
      justify-content: space-between;
      width: 100%;
      display: none;
  }

  .header-middle img {
      height: 100px;
      width: fit-content;
      object-fit: contain;
  }

  .header-right img {
    height: 130px;
    width: fit-content;
    object-fit: contain;
  }

  .header-right img {
      height: 130px;
      width: fit-content;
      object-fit: contain;
  }

  .img_light {
      display: block;
  }

  .img_dark {
      display: none;
  }

  .img_dark {
      display: block;
  }

  .img_light {
      display: none;
  }

  .buttons {
    margin-top: 80px;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 8px;
    z-index: 0;
      max-width: 400px;
  }

  html.dark .header-button {
      color: #cccccc;
      background-color: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .header-button {
    height: 48px;
    color: #282b3b;
    font-size: 16px;
    font-weight: 600;
    line-height: 1;
    border-radius: 3px;
    padding: 10px 20px;
    cursor: pointer;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    border: 1px solid rgba(33, 39, 46, 0.12);
    background-color: rgba(240, 241, 242, 0.27);
    position: relative;
  }

  .button-text {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  #docsearch {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .tags {
    margin-top: 12px;
    display: flex;
    gap: 8px;
  }

  .tag {
    display: flex;
    align-items: center;
    border-radius: 3px;
    overflow: hidden;
    border: 1px solid rgba(33,39,46,.12);
    background-color: hsla(210,7%,95%,.27);
  }

  .tag svg {
      width: 16px;
      height: 16px;
      margin-right: 6px;
  }

  .tag-icon-container {
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .tag-icon {
    width: 16px;
    height: 16px;
    border-radius: 2px;
    overflow: hidden;
    color: #4b5563;
  }

  html.dark .tag {
      border: 1.5px solid #404040;
      background-color: #282828;
  }

  html.dark .tag .ts {
      color: #3178C6;
  }

  html.dark .tag .js {
      color: #F7DF1E;
  }

  html.dark .tag-text {
      color: #FFFFFF;
  }

  .tag-text {
    padding: 0 8px 0 0;
    font-size: 14px;
    font-weight: 600;
    letter-spacing: 0.05em;
    color: #4b5563;
  }

  .title {
    font-size: 40px;
    font-weight: 700;
    line-height: 48px;
      white-space: nowrap;
  }

  .header-button-svg {
      height: 18px;
      width: 18px;
      margin-left: -18px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: margin-left 150ms ease-in-out, opacity 150ms ease-in-out;
      opacity: 0;
  }

  .header-button:hover .header-button-svg {
      margin-left: 6px;
      opacity: 1;
  }
  .header-button-svg svg {
      width: 14px;
      height: 14px;
  }

  .second_pick {
      align-self: start;
      height: 120px;
      margin-top: -80px;
  }

  @media (max-width: 900px) {
      .header-right img {
          height: 100px;
      }

      .second_pick {
          margin-top: -56px;
      }
  }

  @media (max-width: 700px) {
      .header-right {
          display: none;
          margin-top: 64px;
      }

      .header-middle {
          width: 100%;
      }

      .header_container {
          flex-direction: column;
          margin: 120px auto 0;
          align-items: center;
      }

      .header-left {
          max-width: 400px;
          width: 100%;
      }

      .buttons {
          justify-items: center;
          align-self: center;
          width: 100%;
          margin-top: 4px;
      }

      .header-button {
          font-size: 14px;
          height: 40px;
          width: 100%;
      }

      .tag-text {
          font-size: 12px;
      }

      .header-middle {
          margin-top: 64px;
          display: flex;
          align-self: center;
      }

      .title {
          font-size: 26px;
          line-height: 30px;
      }

  }
</style>
